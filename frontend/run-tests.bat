@echo off
REM Script pour ex√©cuter tous les tests frontend

echo ===============================================
echo    TESTS FRONTEND - SUIVI INTERVENTIONS
echo ===============================================
echo.

REM V√©rifier que nous sommes dans le bon r√©pertoire
if not exist "package.json" (
    echo ERREUR: package.json non trouv√©
    echo Assurez-vous d'√™tre dans le r√©pertoire frontend
    pause
    exit /b 1
)

REM V√©rifier que node_modules existe
if not exist "node_modules" (
    echo Installation des d√©pendances...
    npm install
    if %errorlevel% neq 0 (
        echo ERREUR: √âchec de l'installation des d√©pendances
        pause
        exit /b 1
    )
)

echo D√©marrage des tests...
echo.

REM Variables d'environnement
set NODE_ENV=test

REM 1. Type checking
echo [1/5] V√©rification TypeScript...
call npm run type-check
if %errorlevel% neq 0 (
    echo ‚ùå Erreurs de type d√©tect√©es
    echo.
    goto :show_results
) else (
    echo ‚úÖ Type checking r√©ussi
    echo.
)

REM 2. Linting
echo [2/5] V√©rification du code (ESLint)...
call npm run lint
if %errorlevel% neq 0 (
    echo ‚ö†Ô∏è  Avertissements de linting (non bloquants)
) else (
    echo ‚úÖ Linting r√©ussi
)
echo.

REM 3. Tests unitaires
echo [3/5] Tests unitaires...
call npm test
if %errorlevel% neq 0 (
    echo ‚ùå √âchec des tests unitaires
    echo.
    goto :show_results
) else (
    echo ‚úÖ Tests unitaires r√©ussis
    echo.
)

REM 4. Tests de couverture
echo [4/5] Tests de couverture...
call npm run test:coverage
if %errorlevel% neq 0 (
    echo ‚ö†Ô∏è  Couverture incompl√®te (non bloquant)
) else (
    echo ‚úÖ Rapport de couverture g√©n√©r√©
)
echo.

REM 5. G√©n√©ration des rapports
echo [5/5] G√©n√©ration des rapports...
if exist "tests\test-runner.ts" (
    call npx tsx tests/test-runner.ts
    if %errorlevel% equ 0 (
        echo ‚úÖ Rapports g√©n√©r√©s
    ) else (
        echo ‚ö†Ô∏è  Erreur de g√©n√©ration des rapports
    )
) else (
    echo ‚ö†Ô∏è  Script de rapport non trouv√©
)
echo.

:show_results
echo ===============================================
echo              R√âSULTATS FINAUX
echo ===============================================

REM V√©rifier si les rapports ont √©t√© g√©n√©r√©s
if exist "tests\reports\frontend-test-report.html" (
    echo.
    echo üìã Rapport HTML disponible : tests\reports\frontend-test-report.html
    echo üìã Rapport JSON disponible : tests\reports\frontend-test-report.json
    echo.

    echo Voulez-vous ouvrir le rapport HTML ? (o/n)
    set /p choice=
    if /i "%choice%"=="o" (
        start "" "tests\reports\frontend-test-report.html"
    )
)

REM V√©rifier si le rapport de couverture existe
if exist "coverage\index.html" (
    echo.
    echo üìä Rapport de couverture disponible : coverage\index.html
    echo.

    echo Voulez-vous ouvrir le rapport de couverture ? (o/n)
    set /p choice=
    if /i "%choice%"=="o" (
        start "" "coverage\index.html"
    )
)

echo.
echo ===============================================
echo Options pour les prochaines ex√©cutions :
echo.
echo npm test                 - Tests unitaires seulement
echo npm run test:ui         - Interface de test interactive
echo npm run test:coverage   - Tests avec couverture
echo npm run type-check      - V√©rification TypeScript
echo npm run lint           - V√©rification du code
echo npm run lint:fix       - Correction automatique du code
echo.
echo ===============================================

pause